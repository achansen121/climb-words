#!/usr/bin/nodejs

var promise=function(name,argnames){
  var t=this;
  if(!name)
    name="";
  else
    name="."+name;
  this.toString=function(){
    return "[Promise"+name+" ("+(isdone?"done":"not done")+") "+(isdone? ("(data:"+Object.keys(data).join(", "))+")":"")+ "]";
  };
  this.inspect=this.toString;
  var isdone=false;
  var data=null;
  this.after=function(fto){
    if(isdone){
      fto.call(t,data);
    }
    else
      t.flist.push(fto);
  };
  var arg_map={};
  this.set_arg_names=function(){
    var an=[];
    for (var i = 0; i < arguments.length; i++) {
      an[i]=arguments[i];
    };
    __set_arg_names(an);
  };
  var __set_arg_names=function(arr){
    arg_map={};
    for (var i = 0; i < arr.length; i++) {
      arg_map[i]=arr[i];
    };
    if(isdone)
      save(data);
  };
  if(argnames!=undefined)
    __set_arg_names(argnames);

  var save=function(all){
    if(isdone)
      throw new Error("finished twice");
    isdone=true;

    if(!arg_map){
      data=all;
      return;
    }
    data={};
    for (var i = 0; i < all.length; i++) {
      if(i in arg_map)
        data[arg_map[i]]=all[i];
      else
        data[i]=all[i];
    };
  };
  this.done=function(){
    save(arguments);
    var fto=true;
    while(fto){
      fto=t.flist.shift();
      if(fto)
        fto.call(t,data);
      }
  };
  this.flist=[];
};

module.exports=promise;
